;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/04/2015 20:24:07
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28CA      	GOTO       202
_Mul_32x32_U:
;__Lib_Math.c,1774 :: 		
;__Lib_Math.c,1789 :: 		
0x0003	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,1790 :: 		
0x0004	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,1791 :: 		
0x0005	0x3022      	MOVLW      34
;__Lib_Math.c,1792 :: 		
0x0006	0x00FC      	MOVWF      R12
;__Lib_Math.c,1793 :: 		
0x0007	0x01F8      	CLRF       R8
;__Lib_Math.c,1794 :: 		
0x0008	0x01F9      	CLRF       R9
;__Lib_Math.c,1795 :: 		
0x0009	0x01FA      	CLRF       R10
;__Lib_Math.c,1796 :: 		
0x000A	0x01FB      	CLRF       R11
;__Lib_Math.c,1798 :: 		
_NEXT:
;__Lib_Math.c,1802 :: 		
0x000B	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1803 :: 		
0x000C	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1804 :: 		
0x000D	0x2839      	GOTO       _EXIT2
;__Lib_Math.c,1805 :: 		
0x000E	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,1807 :: 		
_LOOP:
;__Lib_Math.c,1816 :: 		
0x000F	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,1817 :: 		
0x0010	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,1818 :: 		
0x0011	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,1819 :: 		
0x0012	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,1820 :: 		
0x0013	0x0CF3      	RRF        R3, 1
;__Lib_Math.c,1821 :: 		
0x0014	0x0CF2      	RRF        R2, 1
;__Lib_Math.c,1822 :: 		
0x0015	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,1823 :: 		
0x0016	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,1828 :: 		
0x0017	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1829 :: 		
0x0018	0x280B      	GOTO       _NEXT
;__Lib_Math.c,1830 :: 		
0x0019	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1831 :: 		
0x001A	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1832 :: 		
0x001B	0x282B      	GOTO       _EXIT1
;__Lib_Math.c,1839 :: 		
0x001C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1840 :: 		
0x001D	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1841 :: 		
0x001E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1842 :: 		
0x001F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1843 :: 		
0x0020	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1844 :: 		
0x0021	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1845 :: 		
0x0022	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1846 :: 		
0x0023	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1847 :: 		
0x0024	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1848 :: 		
0x0025	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1849 :: 		
0x0026	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1850 :: 		
0x0027	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1851 :: 		
0x0028	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1852 :: 		
0x0029	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1854 :: 		
0x002A	0x280F      	GOTO       _LOOP
;__Lib_Math.c,1856 :: 		
_EXIT1:
;__Lib_Math.c,1861 :: 		
0x002B	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1862 :: 		
0x002C	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1863 :: 		
0x002D	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1864 :: 		
0x002E	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1865 :: 		
0x002F	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1866 :: 		
0x0030	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1867 :: 		
0x0031	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1868 :: 		
0x0032	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1869 :: 		
0x0033	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1870 :: 		
0x0034	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1871 :: 		
0x0035	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1872 :: 		
0x0036	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1873 :: 		
0x0037	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1874 :: 		
0x0038	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1877 :: 		
_EXIT2:
;__Lib_Math.c,1879 :: 		
L_end_Mul_32x32_U:
0x0039	0x0008      	RETURN
; end of _Mul_32x32_U
_VDelay_ms:
;__Lib_Delays.c,82 :: 		void VDelay_ms(unsigned Time_ms){
;__Lib_Delays.c,84 :: 		NumberOfCyc = Clock_kHz()>>2; // this will be done by compiler, no asm will be genereated except that for assignment;
0x003A	0x30D0      	MOVLW      208
0x003B	0x1283      	BCF        STATUS, 5
0x003C	0x1303      	BCF        STATUS, 6
0x003D	0x00AA      	MOVWF      VDelay_ms_NumberOfCyc_L0
0x003E	0x3007      	MOVLW      7
0x003F	0x00AB      	MOVWF      VDelay_ms_NumberOfCyc_L0+1
0x0040	0x01AC      	CLRF       VDelay_ms_NumberOfCyc_L0+2
0x0041	0x01AD      	CLRF       VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,85 :: 		NumberOfCyc *= Time_ms;
0x0042	0x30D0      	MOVLW      208
0x0043	0x00F0      	MOVWF      R0
0x0044	0x3007      	MOVLW      7
0x0045	0x00F1      	MOVWF      R0+1
0x0046	0x3000      	MOVLW      0
0x0047	0x00F2      	MOVWF      R0+2
0x0048	0x3000      	MOVLW      0
0x0049	0x00F3      	MOVWF      R0+3
0x004A	0x0828      	MOVF       FARG_VDelay_ms_Time_ms, 0
0x004B	0x00F4      	MOVWF      R4
0x004C	0x0829      	MOVF       FARG_VDelay_ms_Time_ms+1, 0
0x004D	0x00F5      	MOVWF      R4+1
0x004E	0x01F6      	CLRF       R4+2
0x004F	0x01F7      	CLRF       R4+3
0x0050	0x2003      	CALL       _Mul_32x32_U
0x0051	0x0870      	MOVF       R0, 0
0x0052	0x00AA      	MOVWF      VDelay_ms_NumberOfCyc_L0
0x0053	0x0871      	MOVF       R0+1, 0
0x0054	0x00AB      	MOVWF      VDelay_ms_NumberOfCyc_L0+1
0x0055	0x0872      	MOVF       R0+2, 0
0x0056	0x00AC      	MOVWF      VDelay_ms_NumberOfCyc_L0+2
0x0057	0x0873      	MOVF       R0+3, 0
0x0058	0x00AD      	MOVWF      VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,86 :: 		if (NumberOfCyc < 690)
0x0059	0x3000      	MOVLW      0
0x005A	0x0273      	SUBWF      R0+3, 0
0x005B	0x1D03      	BTFSS      STATUS, 2
0x005C	0x2867      	GOTO       L__VDelay_ms38
0x005D	0x3000      	MOVLW      0
0x005E	0x0272      	SUBWF      R0+2, 0
0x005F	0x1D03      	BTFSS      STATUS, 2
0x0060	0x2867      	GOTO       L__VDelay_ms38
0x0061	0x3002      	MOVLW      2
0x0062	0x0271      	SUBWF      R0+1, 0
0x0063	0x1D03      	BTFSS      STATUS, 2
0x0064	0x2867      	GOTO       L__VDelay_ms38
0x0065	0x30B2      	MOVLW      178
0x0066	0x0270      	SUBWF      R0, 0
L__VDelay_ms38:
0x0067	0x1803      	BTFSC      STATUS, 0
0x0068	0x286A      	GOTO       L_VDelay_ms15
;__Lib_Delays.c,87 :: 		return;
0x0069	0x28A9      	GOTO       L_end_VDelay_ms
L_VDelay_ms15:
;__Lib_Delays.c,88 :: 		NumberOfCyc -= 690;
0x006A	0x30B2      	MOVLW      178
0x006B	0x00F0      	MOVWF      R0
0x006C	0x3002      	MOVLW      2
0x006D	0x00F1      	MOVWF      R0+1
0x006E	0x01F2      	CLRF       R0+2
0x006F	0x01F3      	CLRF       R0+3
0x0070	0x0870      	MOVF       R0, 0
0x0071	0x02AA      	SUBWF      VDelay_ms_NumberOfCyc_L0, 1
0x0072	0x0871      	MOVF       R0+1, 0
0x0073	0x1C03      	BTFSS      STATUS, 0
0x0074	0x0F71      	INCFSZ     R0+1, 0
0x0075	0x02AB      	SUBWF      VDelay_ms_NumberOfCyc_L0+1, 1
0x0076	0x0872      	MOVF       R0+2, 0
0x0077	0x1C03      	BTFSS      STATUS, 0
0x0078	0x0F72      	INCFSZ     R0+2, 0
0x0079	0x02AC      	SUBWF      VDelay_ms_NumberOfCyc_L0+2, 1
0x007A	0x0873      	MOVF       R0+3, 0
0x007B	0x1C03      	BTFSS      STATUS, 0
0x007C	0x0F73      	INCFSZ     R0+3, 0
0x007D	0x02AD      	SUBWF      VDelay_ms_NumberOfCyc_L0+3, 1
;__Lib_Delays.c,89 :: 		NumberOfCyc =  NumberOfCyc >> 5; // Dec and While below take around 32 instructions
0x007E	0x3005      	MOVLW      5
0x007F	0x00F0      	MOVWF      R0
0x0080	0x0870      	MOVF       R0, 0
L__VDelay_ms39:
0x0081	0x1903      	BTFSC      STATUS, 2
0x0082	0x288A      	GOTO       L__VDelay_ms40
0x0083	0x0CAD      	RRF        VDelay_ms_NumberOfCyc_L0+3, 1
0x0084	0x0CAC      	RRF        VDelay_ms_NumberOfCyc_L0+2, 1
0x0085	0x0CAB      	RRF        VDelay_ms_NumberOfCyc_L0+1, 1
0x0086	0x0CAA      	RRF        VDelay_ms_NumberOfCyc_L0, 1
0x0087	0x13AD      	BCF        VDelay_ms_NumberOfCyc_L0+3, 7
0x0088	0x3EFF      	ADDLW      255
0x0089	0x2881      	GOTO       L__VDelay_ms39
L__VDelay_ms40:
;__Lib_Delays.c,90 :: 		while (NumberOfCyc--)
L_VDelay_ms16:
0x008A	0x082A      	MOVF       VDelay_ms_NumberOfCyc_L0, 0
0x008B	0x00F0      	MOVWF      R0
0x008C	0x082B      	MOVF       VDelay_ms_NumberOfCyc_L0+1, 0
0x008D	0x00F1      	MOVWF      R0+1
0x008E	0x082C      	MOVF       VDelay_ms_NumberOfCyc_L0+2, 0
0x008F	0x00F2      	MOVWF      R0+2
0x0090	0x082D      	MOVF       VDelay_ms_NumberOfCyc_L0+3, 0
0x0091	0x00F3      	MOVWF      R0+3
0x0092	0x3001      	MOVLW      1
0x0093	0x02AA      	SUBWF      VDelay_ms_NumberOfCyc_L0, 1
0x0094	0x1C03      	BTFSS      STATUS, 0
0x0095	0x02AB      	SUBWF      VDelay_ms_NumberOfCyc_L0+1, 1
0x0096	0x1C03      	BTFSS      STATUS, 0
0x0097	0x02AC      	SUBWF      VDelay_ms_NumberOfCyc_L0+2, 1
0x0098	0x1C03      	BTFSS      STATUS, 0
0x0099	0x02AD      	SUBWF      VDelay_ms_NumberOfCyc_L0+3, 1
0x009A	0x0870      	MOVF       R0, 0
0x009B	0x0471      	IORWF      R0+1, 0
0x009C	0x0472      	IORWF      R0+2, 0
0x009D	0x0473      	IORWF      R0+3, 0
0x009E	0x1903      	BTFSC      STATUS, 2
0x009F	0x28A9      	GOTO       L_VDelay_ms17
;__Lib_Delays.c,92 :: 		asm nop;
0x00A0	0x0000      	NOP
;__Lib_Delays.c,93 :: 		asm nop;
0x00A1	0x0000      	NOP
;__Lib_Delays.c,94 :: 		asm nop;
0x00A2	0x0000      	NOP
;__Lib_Delays.c,95 :: 		asm nop;
0x00A3	0x0000      	NOP
;__Lib_Delays.c,96 :: 		asm nop;
0x00A4	0x0000      	NOP
;__Lib_Delays.c,97 :: 		asm nop;
0x00A5	0x0000      	NOP
;__Lib_Delays.c,98 :: 		asm nop;
0x00A6	0x0000      	NOP
;__Lib_Delays.c,99 :: 		asm nop;
0x00A7	0x0000      	NOP
;__Lib_Delays.c,100 :: 		}
0x00A8	0x288A      	GOTO       L_VDelay_ms16
L_VDelay_ms17:
;__Lib_Delays.c,101 :: 		}
L_end_VDelay_ms:
0x00A9	0x0008      	RETURN
; end of _VDelay_ms
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00AA	0x1283      	BCF        STATUS, 5
0x00AB	0x1303      	BCF        STATUS, 6
0x00AC	0x0823      	MOVF       ___DoICPAddr+1, 0
0x00AD	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00AE	0x0822      	MOVF       ___DoICPAddr, 0
0x00AF	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00B0	0x0008      	RETURN
; end of _____DoICP
_write:
;EXP1.c,24 :: 		void write(int value, int time) {
;EXP1.c,25 :: 		PORTC.RC1 = value;
0x00B1	0x1283      	BCF        STATUS, 5
0x00B2	0x1303      	BCF        STATUS, 6
0x00B3	0x1824      	BTFSC      FARG_write_value, 0
0x00B4	0x28B7      	GOTO       L__write12
0x00B5	0x1087      	BCF        PORTC, 1
0x00B6	0x28B8      	GOTO       L__write13
L__write12:
0x00B7	0x1487      	BSF        PORTC, 1
L__write13:
;EXP1.c,26 :: 		VDelay_ms(time);
0x00B8	0x0826      	MOVF       FARG_write_time, 0
0x00B9	0x00A8      	MOVWF      FARG_VDelay_ms_Time_ms
0x00BA	0x0827      	MOVF       FARG_write_time+1, 0
0x00BB	0x00A9      	MOVWF      FARG_VDelay_ms_Time_ms+1
0x00BC	0x203A      	CALL       _VDelay_ms
;EXP1.c,27 :: 		}
L_end_write:
0x00BD	0x0008      	RETURN
; end of _write
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x00BE	0x20AA      	CALL       _____DoICP
0x00BF	0x118A      	BCF        PCLATH, 3
0x00C0	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00C1	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00C2	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00C3	0x0AA2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00C4	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00C5	0x0AA3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x00C6	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x00C7	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x00C8	0x28BE      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x00C9	0x0008      	RETURN
; end of ___CC2DW
_main:
0x00CA	0x3001      	MOVLW      1
0x00CB	0x1283      	BCF        STATUS, 5
0x00CC	0x1303      	BCF        STATUS, 6
0x00CD	0x00A0      	MOVWF      _i
0x00CE	0x01A1      	CLRF       33
;EXP1.c,5 :: 		void main() {
;EXP1.c,8 :: 		TRISC.RC1 = 0;
0x00CF	0x1683      	BSF        STATUS, 5
0x00D0	0x1087      	BCF        TRISC, 1
;EXP1.c,10 :: 		while(1) {
L_main0:
;EXP1.c,11 :: 		for(i = 0; i < 50; i++) {
0x00D1	0x1283      	BCF        STATUS, 5
0x00D2	0x01A0      	CLRF       _i
0x00D3	0x01A1      	CLRF       _i+1
L_main2:
0x00D4	0x3080      	MOVLW      128
0x00D5	0x0621      	XORWF      _i+1, 0
0x00D6	0x00F0      	MOVWF      R0
0x00D7	0x3080      	MOVLW      128
0x00D8	0x0270      	SUBWF      R0, 0
0x00D9	0x1D03      	BTFSS      STATUS, 2
0x00DA	0x28DD      	GOTO       L__main9
0x00DB	0x3032      	MOVLW      50
0x00DC	0x0220      	SUBWF      _i, 0
L__main9:
0x00DD	0x1803      	BTFSC      STATUS, 0
0x00DE	0x28F3      	GOTO       L_main3
;EXP1.c,12 :: 		write(0, i);
0x00DF	0x01A4      	CLRF       FARG_write_value
0x00E0	0x01A5      	CLRF       FARG_write_value+1
0x00E1	0x0820      	MOVF       _i, 0
0x00E2	0x00A6      	MOVWF      FARG_write_time
0x00E3	0x0821      	MOVF       _i+1, 0
0x00E4	0x00A7      	MOVWF      FARG_write_time+1
0x00E5	0x20B1      	CALL       _write
;EXP1.c,13 :: 		write(1, i);
0x00E6	0x3001      	MOVLW      1
0x00E7	0x00A4      	MOVWF      FARG_write_value
0x00E8	0x3000      	MOVLW      0
0x00E9	0x00A5      	MOVWF      FARG_write_value+1
0x00EA	0x0820      	MOVF       _i, 0
0x00EB	0x00A6      	MOVWF      FARG_write_time
0x00EC	0x0821      	MOVF       _i+1, 0
0x00ED	0x00A7      	MOVWF      FARG_write_time+1
0x00EE	0x20B1      	CALL       _write
;EXP1.c,11 :: 		for(i = 0; i < 50; i++) {
0x00EF	0x0AA0      	INCF       _i, 1
0x00F0	0x1903      	BTFSC      STATUS, 2
0x00F1	0x0AA1      	INCF       _i+1, 1
;EXP1.c,14 :: 		}
0x00F2	0x28D4      	GOTO       L_main2
L_main3:
;EXP1.c,15 :: 		for(i = 50; i > 0; i--) {
0x00F3	0x3032      	MOVLW      50
0x00F4	0x00A0      	MOVWF      _i
0x00F5	0x3000      	MOVLW      0
0x00F6	0x00A1      	MOVWF      _i+1
L_main5:
0x00F7	0x3080      	MOVLW      128
0x00F8	0x00F0      	MOVWF      R0
0x00F9	0x3080      	MOVLW      128
0x00FA	0x0621      	XORWF      _i+1, 0
0x00FB	0x0270      	SUBWF      R0, 0
0x00FC	0x1D03      	BTFSS      STATUS, 2
0x00FD	0x2900      	GOTO       L__main10
0x00FE	0x0820      	MOVF       _i, 0
0x00FF	0x3C00      	SUBLW      0
L__main10:
0x0100	0x1803      	BTFSC      STATUS, 0
0x0101	0x2917      	GOTO       L_main6
;EXP1.c,16 :: 		write(0, i);
0x0102	0x01A4      	CLRF       FARG_write_value
0x0103	0x01A5      	CLRF       FARG_write_value+1
0x0104	0x0820      	MOVF       _i, 0
0x0105	0x00A6      	MOVWF      FARG_write_time
0x0106	0x0821      	MOVF       _i+1, 0
0x0107	0x00A7      	MOVWF      FARG_write_time+1
0x0108	0x20B1      	CALL       _write
;EXP1.c,17 :: 		write(1, i);
0x0109	0x3001      	MOVLW      1
0x010A	0x00A4      	MOVWF      FARG_write_value
0x010B	0x3000      	MOVLW      0
0x010C	0x00A5      	MOVWF      FARG_write_value+1
0x010D	0x0820      	MOVF       _i, 0
0x010E	0x00A6      	MOVWF      FARG_write_time
0x010F	0x0821      	MOVF       _i+1, 0
0x0110	0x00A7      	MOVWF      FARG_write_time+1
0x0111	0x20B1      	CALL       _write
;EXP1.c,15 :: 		for(i = 50; i > 0; i--) {
0x0112	0x3001      	MOVLW      1
0x0113	0x02A0      	SUBWF      _i, 1
0x0114	0x1C03      	BTFSS      STATUS, 0
0x0115	0x03A1      	DECF       _i+1, 1
;EXP1.c,18 :: 		}
0x0116	0x28F7      	GOTO       L_main5
L_main6:
;EXP1.c,19 :: 		}
0x0117	0x28D1      	GOTO       L_main0
;EXP1.c,21 :: 		}
L_end_main:
0x0118	0x2918      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [55]    _Mul_32x32_U
0x003A     [112]    _VDelay_ms
0x00AA       [7]    _____DoICP
0x00B1      [13]    _write
0x00BE      [12]    ___CC2DW
0x00CA      [79]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x0020       [2]    _i
0x0022       [2]    ___DoICPAddr
0x0024       [2]    FARG_write_value
0x0026       [2]    FARG_write_time
0x0028       [2]    FARG_VDelay_ms_Time_ms
0x002A       [4]    VDelay_ms_NumberOfCyc_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0087       [1]    TRISC
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_end_main
  _main
  L__main9
  L__main10
  L_end_write
  _write
  L__write12
  L__write13
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8x8_U
  _Mul_8x8_U
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
